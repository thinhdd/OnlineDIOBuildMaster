//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations.
//


package com.qsoft.pilotproject.ui.activity;

import android.accounts.AccountManager;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import com.googlecode.androidannotations.api.BackgroundExecutor;
import com.qsoft.pilotproject.R.id;
import com.qsoft.pilotproject.R.layout;
import com.qsoft.pilotproject.common.CommandExecutor_;
import com.qsoft.pilotproject.common.authenticator.ApplicationAccountManager_;
import com.qsoft.pilotproject.data.rest.OnlineDioClientProxy_;
import com.qsoft.pilotproject.handler.impl.AuthenticatorHandlerImpl_;
import com.qsoft.pilotproject.ui.controller.LoginController_;

public final class LoginActivity_
    extends LoginActivity
{

    private Handler handler_ = new Handler();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        setContentView(layout.activity_login);
    }

    private void init_(Bundle savedInstanceState) {
        accountManager = ((AccountManager) this.getSystemService(Context.ACCOUNT_SERVICE));
        onlineDioClientProxy = OnlineDioClientProxy_.getInstance_(this);
        onLineDioService = AuthenticatorHandlerImpl_.getInstance_(this);
        commandExecutor = CommandExecutor_.getInstance_(this);
        applicationAccountManager = ApplicationAccountManager_.getInstance_(this);
        loginController = LoginController_.getInstance_(this);
    }

    private void afterSetContentView_() {
        etEmail = ((EditText) findViewById(id.login_etMail));
        imDone = ((ImageView) findViewById(id.login_ivLogin));
        imBack = ((ImageView) findViewById(id.login_ivBack));
        forgotPass = ((TextView) findViewById(id.login_tvForgotPass));
        etPassword = ((EditText) findViewById(id.login_etPassword));
        {
            View view = findViewById(id.login_tvForgotPass);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        LoginActivity_.this.doClickForgetPassword();
                    }

                }
                );
            }
        }
        {
            View view = findViewById(id.login_ivBack);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        LoginActivity_.this.doClickBack();
                    }

                }
                );
            }
        }
        {
            View view = findViewById(id.login_ivLogin);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        LoginActivity_.this.doClickLogin();
                    }

                }
                );
            }
        }
        ((OnlineDioClientProxy_) onlineDioClientProxy).afterSetContentView_();
        ((AuthenticatorHandlerImpl_) onLineDioService).afterSetContentView_();
        ((CommandExecutor_) commandExecutor).afterSetContentView_();
        ((ApplicationAccountManager_) applicationAccountManager).afterSetContentView_();
        ((LoginController_) loginController).afterSetContentView_();
        {
            final TextView view = ((TextView) findViewById(id.login_etMail));
            if (view!= null) {
                view.addTextChangedListener(new TextWatcher() {


                    @Override
                    public void afterTextChanged(Editable s) {
                        LoginActivity_.this.handleTextChangeEmail();
                    }

                    @Override
                    public void onTextChanged(CharSequence s, int start, int before, int count) {
                    }

                    @Override
                    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
                    }

                }
                );
            }
        }
        {
            final TextView view = ((TextView) findViewById(id.login_etPassword));
            if (view!= null) {
                view.addTextChangedListener(new TextWatcher() {


                    @Override
                    public void afterTextChanged(Editable s) {
                        LoginActivity_.this.handleTextChangeEmail();
                    }

                    @Override
                    public void onTextChanged(CharSequence s, int start, int before, int count) {
                    }

                    @Override
                    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
                    }

                }
                );
            }
        }
        afterViews();
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        afterSetContentView_();
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        afterSetContentView_();
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        afterSetContentView_();
    }

    public static LoginActivity_.IntentBuilder_ intent(Context context) {
        return new LoginActivity_.IntentBuilder_(context);
    }

    @Override
    public void updateLogin(final Intent intent) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    LoginActivity_.super.updateLogin(intent);
                } catch (RuntimeException e) {
                    Log.e("LoginActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void doSignInService(final String email, final String pass, final String accountType) {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    LoginActivity_.super.doSignInService(email, pass, accountType);
                } catch (RuntimeException e) {
                    Log.e("LoginActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    public static class IntentBuilder_ {

        private Context context_;
        private final Intent intent_;

        public IntentBuilder_(Context context) {
            context_ = context;
            intent_ = new Intent(context, LoginActivity_.class);
        }

        public Intent get() {
            return intent_;
        }

        public LoginActivity_.IntentBuilder_ flags(int flags) {
            intent_.setFlags(flags);
            return this;
        }

        public void start() {
            context_.startActivity(intent_);
        }

        public void startForResult(int requestCode) {
            if (context_ instanceof Activity) {
                ((Activity) context_).startActivityForResult(intent_, requestCode);
            } else {
                context_.startActivity(intent_);
            }
        }

    }

}
